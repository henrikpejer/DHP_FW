<?php
namespace DHP_FW;
/**
 * Generated by PHPUnit_SkeletonGenerator on 2013-01-06 at 09:38:13.
 */
class RequestTest extends \PHPUnit_Framework_TestCase {
    /**
     * @var Request
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $_SERVER['HTTP_HOST'] = 'phpunittests.com';
        $_SERVER['HTTP_CONTENT_TYPE'] = 'Application/json: encoding=utf8';
        $_GET                 = array('someGet' => 'someGetValue', 'some' => 'get value');
        $_POST                = array('somePost' => 'somePostValue', 'some' => 'post value');

        $DI = \app\DI();#new \DHP_FW\dependencyInjection\DI(new Event());
        $DI->set('DHP_FW\RequestInterface','DHP_FW\Request')->setArguments(array(NULL,NULL,'{"something":"else"}'));
        $this->object = $DI->get('DHP_FW\RequestInterface');
        #$this->object         = new Request();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
    }

    public function testGenerateMethods() {
        $_SERVER['REQUEST_METHOD'] = 'HEAD';
        $_SERVER['REQUEST_URI']    = '/headcheck';
        $o                         = new Request(NULL,NULL,NULL,new Event());
        \PHPUnit_Framework_Assert::assertEquals('headcheck', $o->getUri());
        \PHPUnit_Framework_Assert::assertEquals('HEAD', $o->getMethod());
        unset($_SERVER['REQUEST_METHOD']);
        unset($_SERVER['REQUEST_URI']);
    }

    public function testHeaders() {
        \PHPUnit_Framework_Assert::assertEquals(array('Host' => 'phpunittests.com','Content-Type'=>'Application/json: encoding=utf8'), $this->object->getHeaders());
        \PHPUnit_Framework_Assert::assertEquals('phpunittests.com', $this->object->header('Host'));
    }


    /**
     */
    public function testGetMethod() {
        \PHPUnit_Framework_Assert::assertEquals('GET', $this->object->getMethod());
    }

    /**
     */
    public function testSetMethod() {
        $this->object->setMethod('POST');
        \PHPUnit_Framework_Assert::assertEquals('POST', $this->object->getMethod());

    }


    public function testSetUri() {
        $this->object->setUri('/working');
        \PHPUnit_Framework_Assert::assertEquals('/working', $this->object->getUri());
    }


    public function testGetUri() {
        \PHPUnit_Framework_Assert::assertEquals('', $this->object->getUri());
    }

    public function testInputParameters() {
        \PHPUnit_Framework_Assert::assertEquals('someGetValue', $this->object->query->someGet);
        \PHPUnit_Framework_Assert::assertEquals('somePostValue', $this->object->param->somePost);
        \PHPUnit_Framework_Assert::assertEquals('post value', $this->object->params->some);
    }

    public function testBodyData(){
        \PHPUnit_Framework_Assert::assertEquals((object) array('something'=>'else'),$this->object->body);
    }
}
