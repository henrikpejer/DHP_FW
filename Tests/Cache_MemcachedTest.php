<?php
namespace DHP_FW\cache;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-30 at 14:39:48.
 */
class MemcachedTest extends \PHPUnit_Framework_TestCase {
    /**
     * @var Memcached
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object            = new Memcached;
        $this->memcacheIsWorking = $this->object->checkIsUp();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
    }

    public function testSet() {
        $this->object->set('henrik', 'pejer');
        if ( $this->memcacheIsWorking ) {
            \PHPUnit_Framework_Assert::assertEquals('pejer', $this->object->get('henrik'));
        } else {
            \PHPUnit_Framework_Assert::assertFalse($this->object->get('henrik'));
        }
    }

    public function testDelete(){
        $this->object->set('henrik', 'pejer');
        if ( $this->memcacheIsWorking ) {
            \PHPUnit_Framework_Assert::assertEquals('pejer', $this->object->get('henrik'));
        } else {
            \PHPUnit_Framework_Assert::assertFalse($this->object->get('henrik'));
        }
        $this->object->delete('henrik');
        \PHPUnit_Framework_Assert::assertFalse($this->object->get('henrik'));
    }

    public function testFlush(){
        $this->object->set('henrik', 'pejer');
        if ( $this->memcacheIsWorking ) {
            \PHPUnit_Framework_Assert::assertEquals('pejer', $this->object->get('henrik'));
        } else {
            \PHPUnit_Framework_Assert::assertFalse($this->object->get('henrik'));
        }
        $this->object->flush();
        \PHPUnit_Framework_Assert::assertFalse($this->object->get('henrik'));
    }
}
