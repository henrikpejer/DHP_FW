<?php
namespace DHP_FW\dependencyInjection;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-07 at 19:32:40.
 */
class DIProxyTest extends \PHPUnit_Framework_TestCase {
    /**
     * @var DIProxy
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(){
        $this->object = new DIProxy( 'DHP_FW\\Event', array(), new DI( new \DHP_FW\Event() ) );
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(){
    }

    public function testGet(){
        $shouldBe = array(
            'class' => 'DHP_FW\\Event', 'args' => array(), 'methods' => array()
        );
        \PHPUnit_Framework_Assert::assertEquals($shouldBe, $this->object->get());
    }

    /**
     */
    public function testAddMethodCall(){
        $shouldBe = array(
            'class' => 'DHP_FW\\Event', 'args' => array(), 'methods' => array(array('method' => 'getClass', 'args' => array()))
        );
        $this->object->addMethodCall('getClass');
        \PHPUnit_Framework_Assert::assertEquals($shouldBe, $this->object->get());
    }

    /**
     */
    public function testSetArguments(){
        $shouldBe = array(
            'class' => 'DHP_FW\\Event', 'args' => array('something'),'methods'=>array()
        );
        $this->object->setArguments(array('something'));
        \PHPUnit_Framework_Assert::assertEquals($shouldBe, $this->object->get());
    }

    /**
     */
    public function testInit(){
        $this->object->addMethodCall('trigger',array('nonexisting.event'));
        $o = $this->object->init();
        \PHPUnit_Framework_Assert::assertInstanceOf('DHP_FW\\Event',$o);
    }
}
