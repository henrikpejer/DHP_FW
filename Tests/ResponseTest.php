<?php
namespace DHP_FW;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-11 at 13:46:31.
 */
class ResponseTest extends \PHPUnit_Framework_TestCase {
    /**
     * @var Response
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(){
        $this->object = new Response;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(){
    }

    /**
     */
    public function testSend(){
        $output = 'this worked';
        $arrayData = array(1,2,3);
        $output .= json_encode($arrayData,\JSON_FORCE_OBJECT | \JSON_NUMERIC_CHECK);
        
        
        $arrayWithNamedKeys = array(
            'Henrik' => 'Pejer',
            'Age' => '32',
        );
        $output .= json_encode($arrayWithNamedKeys,\JSON_FORCE_OBJECT | \JSON_NUMERIC_CHECK);
        $object = new \stdClass();
        $object->something = 'something';
        $output .= json_encode($object,\JSON_FORCE_OBJECT | \JSON_NUMERIC_CHECK);
        
        $this->expectOutputString($output);

        $this->object->send('this worked'); 
        $this->object->send($arrayData);
        $this->object->send($arrayWithNamedKeys);
        $this->object->send($object);
        $this->object->send(fopen(__FILE__,'r'));
        
    }

    public function testHeader(){
        $this->object->header('Henrik', 'Pejer');
        \PHPUnit_Framework_Assert::assertAttributeEquals(array('Henrik' => 'Pejer'), 'headers', $this->object);
    }

    /**
     */
    public function testStatus(){
        $this->object->status(200);
        \PHPUnit_Framework_Assert::assertAttributeEquals(array(
                                                              'HTTP/1.1 200 OK' => NULL, 'Status' => '200 OK'
                                                         ), 'headers', $this->object);
    }

    /**
     */
    public function testSendFile(){
        $fileToTest = file_get_contents(__FILE__);
        $this->expectOutputString($fileToTest);
        $this->object->sendFile(__FILE__);
        \PHPUnit_Framework_Assert::assertAttributeEquals(
            Array
            (
                'Content-description' => 'File Transfer',
                'Content-type' => 'text/x-c++',
                'Content-disposition' => 'attachment; filename="ResponseTest.php"',
                'Content-transfer-encoding' => 'binary',
                'HTTP/1.1 200 OK' => NULL,
                'Status' => '200 OK'
            ),
            'headers', $this->object);
    }

    /**
     * @expectedException \Exception
     * @expectedExceptionMessage File does not exist
     */
    public function testSendFileWithNoneExistingFile(){
        $this->object->sendFile('/File/Does/Not/Exist');
    }

    /**
     * @expectedException \Exception
     * @expectedExceptionMessage Unable to read file
     */
    public function testSendFileWithNotReadable(){
        $file = __DIR__.'/NotReadable.txt';
        chmod($file,0155);
        $this->object->sendFile(__DIR__.'/NotReadable.txt');
    }

    /**
     */
    public function testRedirect(){
        $this->object->redirect('/something/something');
        \PHPUnit_Framework_Assert::assertAttributeEquals(array('HTTP/1.1 301 Moved Permanently' => NULL, 'Status' => '301 Moved Permanently', 'Location' => '/something/something'), 'headers', $this->object);
    }
}
